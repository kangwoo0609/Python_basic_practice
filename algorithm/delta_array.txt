- 변화량을 저장하는 배열

- 이차원 델타 배열 예시 ) 상하좌우 -> 문제마다 순서는 다르다!
  - dy = [-1, 1, 0, 0]
  - dx = [0, 0, -1, 1]
 -> 문제에서 ) 상우하좌 순서로 확인하라고 한다면
  - dy = [-1, 0, 1, 0]
  - dx = [0, 1, 0, -1]

- 대각선까지 포함한 델타 배열 (순서는 상방향부터 -> 시계방향으로)
  - dy = [-1, -1, 0, 1, 1, 1, 0, -1]
  - dx = [0, 1, 1, 1, 0, -1, -1, -1]


----------------------------------------------------
----------------------------------------------------

- 두 번째 테스트 케이스를 단계 별로 그려보면 아래와 같다
6
0 0 0 0 0 0
2
0 2 3
1 4 -1

1. 델타 배열을 만드는 과정
0 0 0 0 0 0
delta = [0, 0, 0, 0, 0, 0]

0 2 3 입력
delta = [3, 0, 0, -3, 0, 0]

1 4 -1
delta = [3, -1, 0, -3, 0, 1]

2. 델타 배열을 활용하는 과정
- 델타 값을 누적하면서 계산하기 위해 current_delta 변수가 필요함

delta = [3, -1, 0, -3, 0, 1]
arr : 0 0 0 0 0 0

arr[0]
current_delta = 0 + 3 => 3
값 : 3 0 0 0 0 0

arr[1]
current_delta = 3 + delta[1] = 2
값 : 3 2 0 0 0 0

arr[2]
current_delta = 2 + delta[2] = 2
값 : 3 2 2 0 0 0

arr[3]
current_delta = 2 + delta[3] = -1
값 : 3 2 2 -1 0 0

arr[4]
current_delta = -1 + delta[4] = 0
값 : 3 2 2 -1 -1 0

arr[5]
current_delta = -1 + delta[5] = 0
값 : 3 2 2 -1 -1 0

최종 배열 : 3 2 2 -1 -1 0